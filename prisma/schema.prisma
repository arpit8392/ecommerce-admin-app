datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Store {
  id     String @id @default(uuid())
  name   String
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  billboards Billboard[]
  categories Category[]
  sizes      Size[]
  colors     Color[]
  products   Product[]
}

model Billboard {
  id       String @id @default(uuid())
  label    String
  imageUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  categories Category[]

  @@index([storeId])
}

model Category {
  id   String @id @default(uuid())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  billboard   Billboard @relation(fields: [billboardId], references: [id])
  billboardId String

  store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  products Product[]

  @@index([billboardId])
  @@index([storeId])
}

model Size {
  id    String @id @default(uuid())
  name  String
  value String

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  @@index([storeId])
}

model Color {
  id    String @id @default(uuid())
  name  String
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  products Product[]

  @@index([storeId])
}

model Product {
  id String @id @default(uuid())

  name       String
  price      Decimal
  isFeatured Boolean @default(false)
  isArchived Boolean @default(false)
  images     Image[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  color   Color  @relation(fields: [colorId], references: [id])
  colorId String

  size   Size   @relation(fields: [sizeId], references: [id])
  sizeId String

  @@index([storeId])
  @@index([colorId])
  @@index([categoryId])
  @@index([sizeId])
}

model Image {
  id  String @id @default(uuid())
  url String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String

  @@index([productId])
}
